var h;
((f) => {
  function l(o, n, t) {
    const c = { ...o }, e = c.props || {};
    return n.forEach((r) => {
      r in c && (e[r] = c[r], delete c[r]);
    }), t && Object.entries(t).forEach(([r, i]) => {
      e[r] = i;
    }), c.props = e, c;
  }
  f.buildProps = l;
  function p(o) {
    return typeof o == "object" && o !== null;
  }
  f.isObject = p;
})(h || (h = {}));
const b = h;
var a;
((f) => {
  function l(o) {
    const n = Array.from(o.elements).reduce(
      (t, c) => {
        const e = c.name;
        return e && (t[e] || (t[e] = []), t[e].push(c)), t;
      },
      {}
    );
    return Object.entries(n).reduce((t, [c, e]) => {
      if (e.length === 1) {
        const r = e[0];
        p(t, c, r.type === "checkbox" || r.type === "radio" ? r.checked : r.value);
      } else {
        const r = e.reduce((i, s) => (s.type === "checkbox" || s.type === "radio" ? s.checked && i.push(s.value) : i.push(s.value), i), []);
        p(t, c, r);
      }
      return t;
    }, {});
  }
  f.getFormEntries = l;
  function p(o, n, t) {
    if (n.includes(".")) {
      const c = n.split(".");
      let e = o;
      c.forEach((r, i) => {
        if (c.length > i + 1) {
          const s = r.match(/^(.+)\[(\d)\]$/);
          if (s) {
            const [, u, d] = s;
            e[u] = e[u] || [], e[u][d] = e[u][d] || {}, e = e[u][d];
          } else
            e[r] = e[r] || {}, e = e[r];
        } else
          e[r] = t;
      });
    } else
      o[n] = t;
  }
})(a || (a = {}));
const m = a;
export {
  m as F,
  b as O
};
