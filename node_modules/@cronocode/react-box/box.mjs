import y, { forwardRef as v, useMemo as g, useState as p } from "react";
import { u as N, c as x } from "./core.mjs";
function H(s, o) {
  const { tag: r = "div", children: t, props: i, className: f, style: n, disabled: a } = s, u = N(s, r === "svg"), m = g(() => x(u, f).join(" "), [s]), e = { ...i, className: m, disabled: Array.isArray(a) ? a[0] : a };
  n && (e.style = n), o && (e.ref = o);
  const [d, l] = p(!1), c = typeof t == "function";
  return c && (e.onMouseEnter = () => l(!0), e.onMouseLeave = () => l(!1)), y.createElement(r, e, c ? t({ isHover: d }) : t);
}
const b = v(H);
export {
  b as default
};
