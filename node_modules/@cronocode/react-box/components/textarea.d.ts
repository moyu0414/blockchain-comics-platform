import { default as Box } from '../box';
import { default as React } from 'react';

type BoxProps = Omit<React.ComponentProps<typeof Box<'textarea'>>, 'ref' | 'tag'>;
type BoxTagProps = Required<BoxProps>['props'];
declare const tagProps: readonly ["name", "onInput", "onChange", "placeholder", "value", "defaultValue", "rows", "cols", "autoFocus", "maxLength", "minLength", "readOnly", "required"];
type TagPropsType = (typeof tagProps)[number];
type TextareaTagProps = Omit<BoxTagProps, TagPropsType>;
interface Props extends Omit<BoxProps, 'props'> {
    name?: string;
    props?: TextareaTagProps;
    onInput?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;
    onChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;
    placeholder?: string;
    value?: string;
    defaultValue?: string;
    rows?: number;
    cols?: number;
    autoFocus?: boolean;
    maxLength?: number;
    minLength?: number;
    readOnly?: boolean;
    required?: boolean;
}
declare const _default: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLTextAreaElement>>;
export default _default;
