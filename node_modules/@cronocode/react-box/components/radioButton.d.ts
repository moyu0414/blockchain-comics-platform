import { default as Box } from '../box';
import { default as React } from 'react';

type BoxProps = Omit<React.ComponentProps<typeof Box<'input'>>, 'ref' | 'tag'>;
type BoxTagProps = Required<BoxProps>['props'];
declare const tagProps: readonly ["name", "onInput", "onChange", "value", "autoFocus", "readOnly", "required", "checked", "defaultChecked"];
type TagPropsType = (typeof tagProps)[number];
type RadioButtonTagProps = Omit<BoxTagProps, TagPropsType | 'type'>;
interface Props extends Omit<BoxProps, 'props'> {
    name?: string;
    props?: RadioButtonTagProps;
    onInput?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    value?: string | number;
    autoFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    checked?: boolean;
    defaultChecked?: boolean;
}
declare const _default: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLInputElement>>;
export default _default;
