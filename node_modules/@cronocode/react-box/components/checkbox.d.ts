import { BoxTagProps, BoxProps } from '../box';
import { default as React } from 'react';

declare const tagProps: readonly ["name", "onInput", "onChange", "autoFocus", "readOnly", "required", "value", "checked", "defaultChecked"];
type TagPropsType = (typeof tagProps)[number];
type CheckboxProps = Omit<BoxProps<'input'>, 'tag' | 'props'>;
type CheckboxTagProps = Omit<BoxTagProps<'input'>, TagPropsType | 'type'>;
interface Props extends CheckboxProps {
    name?: string;
    props?: CheckboxTagProps;
    onInput?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    value?: string | number;
    autoFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    checked?: boolean;
    defaultChecked?: boolean;
    indeterminate?: boolean;
}
declare const _default: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLInputElement>>;
export default _default;
