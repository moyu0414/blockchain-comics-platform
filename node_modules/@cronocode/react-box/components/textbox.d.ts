import { default as Box } from '../box';
import { default as React } from 'react';

type BoxProps = Omit<React.ComponentProps<typeof Box<'input'>>, 'ref' | 'tag'>;
type BoxTagProps = Required<BoxProps>['props'];
declare const tagProps: readonly ["name", "onInput", "onChange", "type", "placeholder", "defaultValue", "autoFocus", "readOnly", "required", "value", "pattern"];
type TagPropsType = (typeof tagProps)[number];
type TextboxTagProps = Omit<BoxTagProps, TagPropsType>;
type TextboxType = 'date' | 'datetime-local' | 'email' | 'hidden' | 'month' | 'number' | 'password' | 'search' | 'tel' | 'text' | 'time' | 'url' | 'week';
interface Props extends Omit<BoxProps, 'props'> {
    name?: string;
    props?: TextboxTagProps;
    onInput?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;
    type?: TextboxType;
    placeholder?: string;
    value?: string | number;
    defaultValue?: string | number;
    pattern?: string;
    autoFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    step?: number | string;
}
declare const _default: React.ForwardRefExoticComponent<Props & React.RefAttributes<HTMLInputElement>>;
export default _default;
