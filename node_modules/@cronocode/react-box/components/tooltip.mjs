import { jsxs as v, Fragment as b, jsx as a } from "react/jsx-runtime";
import { createPortal as x } from "react-dom";
import d from "../box.mjs";
import { useMemo as E, useRef as C, useState as g, useCallback as f, useLayoutEffect as L } from "react";
function y() {
  return E(() => {
    const i = "crono-box";
    let r = document.getElementById(i);
    return r || (r = document.createElement("div"), r.id = i, document.body.appendChild(r)), r;
  }, []);
}
const l = 2;
function M(i) {
  const { onPositionChange: r } = i, c = C(null), [t, p] = g(), m = y(), w = f(
    (n, e) => {
      const o = (s) => {
        s.target.contains(n) && e(n);
      };
      return document.addEventListener("scroll", o, { capture: !0 }), () => {
        document.removeEventListener("scroll", o, { capture: !0 });
      };
    },
    [t]
  ), h = f(
    (n, e) => {
      const o = (s) => {
        e(n);
      };
      return window.addEventListener("resize", o, { capture: !0 }), () => {
        window.removeEventListener("resize", o, { capture: !0 });
      };
    },
    [t]
  ), u = f(
    (n) => {
      const e = n.getBoundingClientRect(), o = Math.round((e.top + window.scrollY) * l) / l, s = Math.round((e.left + window.scrollX) * l) / l;
      ((t == null ? void 0 : t.top) !== o || (t == null ? void 0 : t.left) !== s) && (r == null || r({ top: o, left: s }), p({ top: o, left: s, width: e.width > 0 ? e.width : void 0 }));
    },
    [t]
  );
  return L(() => {
    if (c.current) {
      u(c.current);
      const n = w(c.current, u), e = h(c.current, u);
      return () => {
        n(), e();
      };
    }
  }, [t]), /* @__PURE__ */ v(b, { children: [
    /* @__PURE__ */ a(d, { ref: c }),
    t && x(
      /* @__PURE__ */ a(
        d,
        {
          position: "absolute",
          top: 0,
          left: 0,
          transition: "none",
          style: { transform: `translate(${t.left}px,${t.top}px)`, width: t.width },
          children: /* @__PURE__ */ a(d, { position: "absolute", width: "fit", ...i })
        }
      ),
      m
    )
  ] });
}
export {
  M as default
};
