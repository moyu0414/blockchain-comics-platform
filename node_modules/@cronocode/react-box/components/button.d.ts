import { default as Box } from '../box';

type BoxProps = Omit<React.ComponentProps<typeof Box<'button'>>, 'ref' | 'tag'>;
type BoxTagProps = Required<BoxProps>['props'];
declare const tagProps: readonly ["type", "onClick"];
type TagPropsType = (typeof tagProps)[number];
type ButtonTagProps = Omit<BoxTagProps, TagPropsType>;
type ButtonType = Required<React.ComponentProps<'button'>>['type'];
interface Props extends Omit<BoxProps, 'props'> {
    props?: ButtonTagProps;
    type?: ButtonType;
    onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;
}
declare const _default: import('react').ForwardRefExoticComponent<Props & import('react').RefAttributes<HTMLButtonElement>>;
export default _default;
