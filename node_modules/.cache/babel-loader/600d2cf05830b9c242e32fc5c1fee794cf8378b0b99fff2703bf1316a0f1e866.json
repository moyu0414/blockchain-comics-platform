{"ast":null,"code":"import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = function (ns) {\n  var _i18n$options$react, _i18n$options, _i18n$reportNamespace, _i18n$reportNamespace2;\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if ((_i18n$options$react = i18n.options.react) !== null && _i18n$options$react !== void 0 && _i18n$options$react.wait) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || ((_i18n$options = i18n.options) === null || _i18n$options === void 0 ? void 0 : _i18n$options.defaultNS);\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  (_i18n$reportNamespace = (_i18n$reportNamespace2 = i18n.reportNamespaces).addUsedNamespaces) === null || _i18n$reportNamespace === void 0 || _i18n$reportNamespace.call(_i18n$reportNamespace2, namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = \"\".concat(props.lng).concat(joinedNS);\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n === null || i18n === void 0 || i18n.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n === null || i18n === void 0 || i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n === null || bindI18n === void 0 || bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};","map":{"version":3,"names":["useState","useEffect","useContext","useRef","useCallback","getI18n","getDefaults","ReportNamespaces","I18nContext","warnOnce","loadNamespaces","loadLanguages","hasLoadedNamespace","isString","isObject","usePrevious","value","ignore","ref","current","alwaysNewT","i18n","language","namespace","keyPrefix","getFixedT","useMemoizedT","useTranslation","ns","_i18n$options$react","_i18n$options","_i18n$reportNamespace","_i18n$reportNamespace2","props","arguments","length","undefined","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","retNotReady","t","ready","options","react","wait","i18nOptions","useSuspense","namespaces","addUsedNamespaces","call","isInitialized","initializedStoreOnce","every","n","memoGetT","lng","nsMode","getT","getNewT","setT","joinedNS","join","concat","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","on","store","split","forEach","e","off","ret","Promise","resolve"],"sources":["C:/Users/user1/Desktop/blockchain-comics-platform/frontend/node_modules/react-i18next/dist/es/useTranslation.js"],"sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace, isString, isObject } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nconst alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);\nconst useMemoizedT = (i18n, language, namespace, keyPrefix) => useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\nexport const useTranslation = (ns, props = {}) => {\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;\n      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react?.wait) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    const boundReset = () => {\n      if (isMounted.current) setT(getNewT);\n    };\n    if (bindI18n) i18n?.on(bindI18n, boundReset);\n    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (i18n) bindI18n?.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}