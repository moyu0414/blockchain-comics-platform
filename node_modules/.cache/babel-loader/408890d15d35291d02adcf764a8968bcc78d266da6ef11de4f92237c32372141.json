{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Container,Col,Row,Table,ButtonToolbar,Pagination,Tabs,Tab,Card}from'react-bootstrap';import'./bootstrap.min.css';import{Heart,HeartFill}from'react-bootstrap-icons';import{useTranslation}from'react-i18next';import axios from'axios';import{formatDate,formatTime,sortByDatetime}from'../index.js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const website=process.env.REACT_APP_Website;const API_KEY=process.env.REACT_APP_API_KEY;function Analysis(){const[creatorLogArray,setCreatorLogArray]=useState([]);const[selectedIndex,setSelectedIndex]=useState(null);const[comic,setComic]=useState([]);const[saleNFT,setSaleNFT]=useState([]);const[loading,setLoading]=useState(true);const[beingNFT,setBeingNFT]=useState(true);const{t}=useTranslation();const currentAccount=localStorage.getItem(\"currentAccount\");const[currentPage,setCurrentPage]=useState(1);const itemsPerPage=10;// 每頁顯示的收益數量\nconst headers={'api-key':API_KEY};const price=0.98;let allRecord=[];let purchased=[];let CountComicDetails={};let currentComic=[];let comicStats={};const initData=async()=>{try{const response=await axios.get(`${website}/api/creator/records`,{headers:headers,params:{currentAccount:currentAccount}});let analysis=response.data;sortByDatetime(analysis);const comicOrigin=analysis.map(item=>{const date=formatDate(new Date(item.purchase_date));const income=(item.price*0.9).toFixed(3);return{title:`${item.comicTitle} / ${item.chapterTitle}`,date,income,buyer:item.buyer};});setCreatorLogArray(comicOrigin);const nftResponse=await axios.get(`${website}/api/creatorNft/records`,{headers:headers,params:{currentAccount:currentAccount}});let nftData=nftResponse.data;nftData.forEach(item=>{const descTitle=parseAuthorizations(item.description);const keyData=`${item.comicHash}-${item.price}-${item.royalty}-${item.description||\"\"}`;const lastPriceValue=Object.values(item.price).pop();allRecord.push({...item,keyData,price:lastPriceValue});if(!comicStats[keyData]){comicStats[keyData]={tot:0,sale:0};}comicStats[keyData].tot+=1;if(item.minter!==item.owner){// 已售出的 NFT\ncomicStats[keyData].sale+=1;const price=0.98;const keys=Object.keys(item.price);const lastKey=keys[keys.length-1];const secondLastKey=keys[keys.length-2]||null;// 如果没有倒数第二个键，设置为 null\nconst lastValue=parseFloat(item.price[lastKey]);let total=0;if(item.forSale===0){// 已售\nif(lastKey==='1'){// 只賣一個(首賣)\ntotal=parseFloat(item.price[lastKey])*price;}else{// 賣一個以上(首賣&轉手)\ntotal+=parseFloat(item.price[keys[0]])*price;for(const key of keys){if(key!==keys[0]){// 跳过第一个键\ntotal+=parseFloat(item.price[key])*(item.royalty/100);}}}}else if(item.forSale===1){// 未售\nif(secondLastKey){// 存在第二筆價格\ntotal+=parseFloat(item.price[keys[0]])*price;// 首賣\nfor(const key of keys.slice(1,-1)){// 从第二筆到倒数第二筆，最後一筆未售，不用加\ntotal+=parseFloat(item.price[key])*(item.royalty/100);}}}purchased.push({tokenId:item.tokenId,comicHash:item.comicHash,title:item.title,tokenTitle:item.tokenTitle,price:total.toFixed(3)});}});purchased.sort((a,b)=>parseFloat(b.price)-parseFloat(a.price));allRecord.forEach(data=>{const key=data.keyData;if(!CountComicDetails[key]){var _comicStats$key,_comicStats$key2;CountComicDetails[key]=true;currentComic.push({...data,totQty:((_comicStats$key=comicStats[key])===null||_comicStats$key===void 0?void 0:_comicStats$key.tot)||0,saleQty:((_comicStats$key2=comicStats[key])===null||_comicStats$key2===void 0?void 0:_comicStats$key2.sale)||0});}});const fetchImage=async data=>{const nftImgResponse=await axios.get(`${website}/api/nftIMG/${data.comicHash}/${data.tokenId}`,{responseType:'blob',headers});if(nftImgResponse.data.type==='image/jpeg'){data.image=URL.createObjectURL(nftImgResponse.data);}else{const url=data.protoFilename===1?`${website}/api/coverFile/${data.comicHash}`:`${website}/api/comicIMG/${data.comicHash}`;const coverImgResponse=await axios.get(url,{responseType:'blob',headers});data.image=URL.createObjectURL(coverImgResponse.data);}};await Promise.all(currentComic.map(fetchImage));if(currentComic.length===0){setBeingNFT(false);}setComic(currentComic);setSaleNFT(purchased);setLoading(false);}catch(error){console.error('Error fetching records:',error);}};useEffect(()=>{initData();},[currentAccount]);const parseAuthorizations=text=>{text=text.trim();const lines=text.includes('\\n')?text.split('\\n'):[text];return lines.map(line=>{const[name]=line.split(':');return{name:t(name.trim())};});};let totalPrice=creatorLogArray.reduce((total,item)=>{let income=parseFloat(item.income);total+=income;return Number(total.toFixed(3));},0);// 初始值为 0\nif(totalPrice==0){totalPrice=t('目前無人購買');};let nftTotalPrice=saleNFT.reduce((total,item)=>{let price=parseFloat(item.price);total+=price;return Number(total.toFixed(3));},0);if(nftTotalPrice==0){nftTotalPrice=`${t('目前無人購買')}NFT`;};const startIndex=(currentPage-1)*itemsPerPage;const comicIncome=creatorLogArray.slice(startIndex,startIndex+itemsPerPage);const nftIncome=saleNFT.slice(startIndex,startIndex+itemsPerPage);const calculatePagination=(dataArray,handlePageChange)=>{const totalPages=Math.ceil(dataArray.length/itemsPerPage);const pageItems=[];const maxPagesToShow=5;if(totalPages<=maxPagesToShow){for(let i=1;i<=totalPages;i++){pageItems.push(/*#__PURE__*/_jsx(Pagination.Item,{active:i===currentPage,onClick:()=>handlePageChange(i),children:i},i));}}else{const middlePages=Math.floor(maxPagesToShow/2);let startPage=Math.max(2,currentPage-middlePages);let endPage=Math.min(totalPages-1,currentPage+middlePages);if(currentPage-startPage<=middlePages){endPage=Math.min(totalPages-1,startPage+maxPagesToShow-2);}if(endPage-currentPage<=middlePages){startPage=Math.max(2,endPage-maxPagesToShow+2);}pageItems.push(/*#__PURE__*/_jsx(Pagination.Item,{active:currentPage===1,onClick:()=>handlePageChange(1),children:\"1\"},1));if(startPage>2){pageItems.push(/*#__PURE__*/_jsx(Pagination.Ellipsis,{},\"ellipsis-start\"));}for(let i=startPage;i<=endPage;i++){pageItems.push(/*#__PURE__*/_jsx(Pagination.Item,{active:i===currentPage,onClick:()=>handlePageChange(i),children:i},i));}if(endPage<totalPages-1){pageItems.push(/*#__PURE__*/_jsx(Pagination.Ellipsis,{},\"ellipsis-end\"));}pageItems.push(/*#__PURE__*/_jsx(Pagination.Item,{active:currentPage===totalPages,onClick:()=>handlePageChange(totalPages),children:totalPages},totalPages));}return pageItems;};const handlePageChange=page=>{setCurrentPage(page);};return/*#__PURE__*/_jsx(_Fragment,{children:!loading?/*#__PURE__*/_jsxs(Container,{className:\"analysis creatorNft\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"analysis-title\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-center fw-bold\",children:t('收益總攬')})}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"comic\",id:\"data-analysis-tabs\",className:\"mt-4 mb-3 w-100\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"comic\",title:t('漫畫'),children:[/*#__PURE__*/_jsx(Row,{className:\"pt-3 justify-content-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"fw-bold text-center\",children:totalPrice})}),/*#__PURE__*/_jsx(Row,{className:\"pt-3 justify-content-center\",children:/*#__PURE__*/_jsx(Col,{className:\"d-flex justify-content-center chapter-table\",children:/*#__PURE__*/_jsxs(Table,{size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:t('交易日期')}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:t('漫畫 / 章節')}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:t('收益')})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"comicManagement\",children:comicIncome.map((income,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-center fw-bold\",children:income.date}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:income.title}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:income.income})]},index))})]})})}),/*#__PURE__*/_jsx(Row,{className:\"pt-2 pb-5 justify-content-center table-button\",children:/*#__PURE__*/_jsx(Col,{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(ButtonToolbar,{\"aria-label\":\"Toolbar with pagination\",children:/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(Pagination.Prev,{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage<=1,className:\"pagination-button\"}),calculatePagination(creatorLogArray,handlePageChange),/*#__PURE__*/_jsx(Pagination.Next,{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage>=Math.ceil(creatorLogArray.length/itemsPerPage),className:\"pagination-button\"})]})})})})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"nft\",title:\"NFT\",children:[!beingNFT&&/*#__PURE__*/_jsx(Row,{className:\"pt-5 justify-content-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"fw-bold text-center\",children:t('目前尚未鑄造NFT')})}),/*#__PURE__*/_jsx(Row,{className:\"pb-1\",children:comic.map((data,index)=>/*#__PURE__*/_jsx(Col,{xs:4,md:3,className:\"pt-2\",children:/*#__PURE__*/_jsx(Link,{to:`/nftDetail/tokenId${data.tokenId}`,children:/*#__PURE__*/_jsxs(Card,{className:\"effect-image-1\",children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:data.image,alt:`image-${index+1}`}),/*#__PURE__*/_jsx(\"div\",{className:\"creatorNft-overlay\",children:/*#__PURE__*/_jsxs(\"span\",{style:{color:data.saleQty===0?'#F44336'// 已售數量為 0 顯示紅色\n:data.saleQty===data.totQty?'#BBFFFF'// 已售數量等於總數時顯示綠色\n:'#FFC107'// 其他情況顯示橙色\n},children:[t('已售'),\": \",data.saleQty,\" \",t('總數'),\": \",data.totQty]})}),/*#__PURE__*/_jsx(Card.Body,{className:\"simple-text\",children:/*#__PURE__*/_jsx(Card.Text,{className:\"creatorNft-text\",children:data.tokenTitle})})]})})},index))}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Row,{className:\"pt-2 justify-content-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"fw-bold text-center\",children:nftTotalPrice})}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{className:\"d-flex justify-content-center chapter-table pt-3\",children:/*#__PURE__*/_jsxs(Table,{size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:\"tokenId\"}),/*#__PURE__*/_jsxs(\"th\",{className:\"text-center fw-bold\",children:[t('漫畫'),\" / NFT\"]}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:t('總收益')}),/*#__PURE__*/_jsx(\"th\",{className:\"text-center fw-bold\",children:t('詳情')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:nftIncome.map((data,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:data.tokenId}),/*#__PURE__*/_jsxs(\"td\",{className:\"text-center\",children:[data.title,\" / \",data.tokenTitle]}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:data.price}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Link,{to:`/nftDetail/tokenId${data.tokenId}`,children:/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:t('詳情')})})})]},index))})]})})}),/*#__PURE__*/_jsx(Row,{className:\"pt-2 pb-5 justify-content-center table-button\",children:/*#__PURE__*/_jsx(Col,{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(ButtonToolbar,{\"aria-label\":\"Toolbar with pagination\",children:/*#__PURE__*/_jsxs(Pagination,{children:[/*#__PURE__*/_jsx(Pagination.Prev,{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage<=1,className:\"pagination-button\"}),calculatePagination(saleNFT,handlePageChange),/*#__PURE__*/_jsx(Pagination.Next,{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage>=Math.ceil(saleNFT.length/itemsPerPage),className:\"pagination-button\"})]})})})})]})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(\"div\",{children:t('頁面加載中')})})});}export default Analysis;","map":{"version":3,"names":["React","useState","useEffect","Link","Container","Col","Row","Table","ButtonToolbar","Pagination","Tabs","Tab","Card","Heart","HeartFill","useTranslation","axios","formatDate","formatTime","sortByDatetime","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","website","process","env","REACT_APP_Website","API_KEY","REACT_APP_API_KEY","Analysis","creatorLogArray","setCreatorLogArray","selectedIndex","setSelectedIndex","comic","setComic","saleNFT","setSaleNFT","loading","setLoading","beingNFT","setBeingNFT","t","currentAccount","localStorage","getItem","currentPage","setCurrentPage","itemsPerPage","headers","price","allRecord","purchased","CountComicDetails","currentComic","comicStats","initData","response","get","params","analysis","data","comicOrigin","map","item","date","Date","purchase_date","income","toFixed","title","comicTitle","chapterTitle","buyer","nftResponse","nftData","forEach","descTitle","parseAuthorizations","description","keyData","comicHash","royalty","lastPriceValue","Object","values","pop","push","tot","sale","minter","owner","keys","lastKey","length","secondLastKey","lastValue","parseFloat","total","forSale","key","slice","tokenId","tokenTitle","sort","a","b","_comicStats$key","_comicStats$key2","totQty","saleQty","fetchImage","nftImgResponse","responseType","type","image","URL","createObjectURL","url","protoFilename","coverImgResponse","Promise","all","error","console","text","trim","lines","includes","split","line","name","totalPrice","reduce","Number","nftTotalPrice","startIndex","comicIncome","nftIncome","calculatePagination","dataArray","handlePageChange","totalPages","Math","ceil","pageItems","maxPagesToShow","i","Item","active","onClick","children","middlePages","floor","startPage","max","endPage","min","Ellipsis","page","className","defaultActiveKey","id","eventKey","size","index","Prev","disabled","Next","xs","md","to","Img","variant","src","alt","style","color","Body","Text"],"sources":["C:/Users/user1/Desktop/blockchain-comics-platform/frontend/src/routes/analysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Table, ButtonToolbar, Pagination, Tabs, Tab, Card } from 'react-bootstrap';\r\nimport './bootstrap.min.css';\r\nimport { Heart, HeartFill } from 'react-bootstrap-icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport axios from 'axios';\r\nimport { formatDate, formatTime, sortByDatetime } from '../index.js';\r\nconst website = process.env.REACT_APP_Website;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nfunction Analysis() {\r\n    const [creatorLogArray, setCreatorLogArray] = useState([]);\r\n    const [selectedIndex, setSelectedIndex] = useState(null);\r\n\r\n    const [comic, setComic] = useState([]);\r\n    const [saleNFT, setSaleNFT] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [beingNFT, setBeingNFT] = useState(true);\r\n\r\n    const { t } = useTranslation();\r\n    const currentAccount = localStorage.getItem(\"currentAccount\");\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 10; // 每頁顯示的收益數量\r\n    const headers = {'api-key': API_KEY};\r\n\r\n    const price = 0.98;\r\n    let allRecord = [];\r\n    let purchased = [];\r\n    let CountComicDetails = {};\r\n    let currentComic = [];\r\n    let comicStats = {};\r\n\r\n    const initData = async () => {\r\n        try {\r\n            const response = await axios.get(`${website}/api/creator/records`, {\r\n                headers: headers,\r\n                params: {\r\n                    currentAccount: currentAccount\r\n                }\r\n            });\r\n            let analysis = response.data;\r\n            sortByDatetime(analysis);\r\n            const comicOrigin = analysis.map(item => {\r\n                const date = formatDate(new Date(item.purchase_date));\r\n                const income = (item.price * 0.9).toFixed(3);\r\n                return {\r\n                    title: `${item.comicTitle} / ${item.chapterTitle}`,\r\n                    date,\r\n                    income,\r\n                    buyer: item.buyer\r\n                };\r\n            });\r\n            setCreatorLogArray(comicOrigin);\r\n\r\n            const nftResponse = await axios.get(`${website}/api/creatorNft/records`, {\r\n                headers: headers,\r\n                params: {\r\n                    currentAccount: currentAccount\r\n                }\r\n            });\r\n            let nftData = nftResponse.data;\r\n            nftData.forEach(item => {\r\n                const descTitle = parseAuthorizations(item.description);\r\n                const keyData = `${item.comicHash}-${item.price}-${item.royalty}-${item.description || \"\"}`;\r\n                const lastPriceValue = Object.values(item.price).pop();\r\n                allRecord.push({\r\n                    ...item,\r\n                    keyData,\r\n                    price: lastPriceValue\r\n                });\r\n                if (!comicStats[keyData]) {\r\n                    comicStats[keyData] = { tot: 0, sale: 0 };\r\n                }\r\n                comicStats[keyData].tot += 1;\r\n    \r\n                if (item.minter !== item.owner) {  // 已售出的 NFT\r\n                    comicStats[keyData].sale += 1;\r\n                    const price = 0.98;\r\n                    const keys = Object.keys(item.price);\r\n                    const lastKey = keys[keys.length - 1];\r\n                    const secondLastKey = keys[keys.length - 2] || null; // 如果没有倒数第二个键，设置为 null\r\n                    const lastValue = parseFloat(item.price[lastKey]);\r\n                    let total = 0;\r\n                    if (item.forSale === 0) {  // 已售\r\n                        if (lastKey === '1') {  // 只賣一個(首賣)\r\n                            total = parseFloat(item.price[lastKey]) * price;\r\n                        } else {  // 賣一個以上(首賣&轉手)\r\n                            total += parseFloat(item.price[keys[0]]) * price;\r\n                            for (const key of keys) {\r\n                                if (key !== keys[0]) { // 跳过第一个键\r\n                                    total += parseFloat(item.price[key]) * (item.royalty / 100);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (item.forSale === 1) {  // 未售\r\n                        if (secondLastKey) {  // 存在第二筆價格\r\n                            total += parseFloat(item.price[keys[0]]) * price;  // 首賣\r\n                            for (const key of keys.slice(1, -1)) { // 从第二筆到倒数第二筆，最後一筆未售，不用加\r\n                                total += parseFloat(item.price[key]) * (item.royalty / 100);\r\n                            }\r\n                        }\r\n                    }\r\n                    purchased.push({\r\n                        tokenId: item.tokenId,\r\n                        comicHash: item.comicHash,\r\n                        title: item.title,\r\n                        tokenTitle: item.tokenTitle,\r\n                        price: total.toFixed(3),\r\n                    });\r\n                }\r\n            });\r\n            purchased.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\r\n            allRecord.forEach(data => {\r\n                const key = data.keyData;\r\n                if (!CountComicDetails[key]) {\r\n                    CountComicDetails[key] = true;\r\n                    currentComic.push({\r\n                        ...data,\r\n                        totQty: comicStats[key]?.tot || 0,\r\n                        saleQty: comicStats[key]?.sale || 0\r\n                    });\r\n                }\r\n            });\r\n            const fetchImage = async (data) => {\r\n                const nftImgResponse = await axios.get(`${website}/api/nftIMG/${data.comicHash}/${data.tokenId}`, {\r\n                    responseType: 'blob',\r\n                    headers,\r\n                });\r\n                if (nftImgResponse.data.type === 'image/jpeg') {\r\n                    data.image = URL.createObjectURL(nftImgResponse.data);\r\n                } else {\r\n                    const url = data.protoFilename === 1\r\n                    ? `${website}/api/coverFile/${data.comicHash}`\r\n                    : `${website}/api/comicIMG/${data.comicHash}`;\r\n                    const coverImgResponse = await axios.get(url, { responseType: 'blob', headers });\r\n                    data.image = URL.createObjectURL(coverImgResponse.data);\r\n                }\r\n            };\r\n            await Promise.all(currentComic.map(fetchImage));\r\n    \r\n            if (currentComic.length === 0) {\r\n                setBeingNFT(false);\r\n            }\r\n            setComic(currentComic);\r\n            setSaleNFT(purchased);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Error fetching records:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        initData();\r\n    }, [currentAccount]);\r\n\r\n    const parseAuthorizations = (text) => {\r\n        text = text.trim();\r\n        const lines = text.includes('\\n') ? text.split('\\n') : [text];\r\n        return lines.map(line => {\r\n            const [name] = line.split(':');\r\n            return {\r\n                name: t(name.trim()),\r\n            };\r\n        });\r\n    };\r\n\r\n    let totalPrice = creatorLogArray.reduce((total, item) => {\r\n        let income = parseFloat(item.income);\r\n        total += income;\r\n        return Number(total.toFixed(3));\r\n    }, 0); // 初始值为 0\r\n\r\n    if (totalPrice == 0) {\r\n        totalPrice = t('目前無人購買')\r\n    };\r\n\r\n    let nftTotalPrice = saleNFT.reduce((total, item) => {\r\n        let price = parseFloat(item.price);\r\n        total += price;\r\n        return Number(total.toFixed(3));\r\n    }, 0);\r\n\r\n    if (nftTotalPrice == 0) {\r\n        nftTotalPrice = `${t('目前無人購買')}NFT`;\r\n    };\r\n\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const comicIncome = creatorLogArray.slice(startIndex, startIndex + itemsPerPage);\r\n    const nftIncome = saleNFT.slice(startIndex, startIndex + itemsPerPage);\r\n\r\n    const calculatePagination = (dataArray, handlePageChange) => {\r\n        const totalPages = Math.ceil(dataArray.length / itemsPerPage);\r\n        const pageItems = [];\r\n        const maxPagesToShow = 5;\r\n        if (totalPages <= maxPagesToShow) {\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                pageItems.push(\r\n                    <Pagination.Item key={i} active={i === currentPage} onClick={() => handlePageChange(i)}>\r\n                        {i}\r\n                    </Pagination.Item>\r\n                );\r\n            }\r\n        } else {\r\n            const middlePages = Math.floor(maxPagesToShow / 2);\r\n            let startPage = Math.max(2, currentPage - middlePages);\r\n            let endPage = Math.min(totalPages - 1, currentPage + middlePages);\r\n            if (currentPage - startPage <= middlePages) {\r\n                endPage = Math.min(totalPages - 1, startPage + maxPagesToShow - 2);\r\n            }\r\n            if (endPage - currentPage <= middlePages) {\r\n                startPage = Math.max(2, endPage - maxPagesToShow + 2);\r\n            }\r\n            pageItems.push(\r\n                <Pagination.Item key={1} active={currentPage === 1} onClick={() => handlePageChange(1)}>\r\n                    1\r\n                </Pagination.Item>\r\n            );\r\n            if (startPage > 2) {\r\n                pageItems.push(<Pagination.Ellipsis key=\"ellipsis-start\" />);\r\n            }\r\n            for (let i = startPage; i <= endPage; i++) {\r\n                pageItems.push(\r\n                    <Pagination.Item key={i} active={i === currentPage} onClick={() => handlePageChange(i)}>\r\n                        {i}\r\n                    </Pagination.Item>\r\n                );\r\n            }\r\n            if (endPage < totalPages - 1) {\r\n                pageItems.push(<Pagination.Ellipsis key=\"ellipsis-end\" />);\r\n            }\r\n            pageItems.push(\r\n                <Pagination.Item key={totalPages} active={currentPage === totalPages} onClick={() => handlePageChange(totalPages)}>\r\n                    {totalPages}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n        return pageItems;\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!loading ? (\r\n                <Container className='analysis creatorNft'>\r\n                    <div className='analysis-title'>\r\n                        <h2 className='text-center fw-bold'>{t('收益總攬')}</h2>\r\n                    </div>\r\n                    <Tabs defaultActiveKey=\"comic\" id=\"data-analysis-tabs\" className=\"mt-4 mb-3 w-100\">\r\n                        <Tab eventKey=\"comic\" title={t('漫畫')}>\r\n                            <Row className='pt-3 justify-content-center'>\r\n                                <h1 className=\"fw-bold text-center\">{totalPrice}</h1>\r\n                            </Row>\r\n                            <Row className='pt-3 justify-content-center'>\r\n                                <Col className='d-flex justify-content-center chapter-table'>\r\n                                    <Table size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className='text-center fw-bold'>{t('交易日期')}</th>\r\n                                                <th className='text-center fw-bold'>{t('漫畫 / 章節')}</th>\r\n                                                <th className='text-center fw-bold'>{t('收益')}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody className=\"comicManagement\">\r\n                                            {comicIncome.map((income, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='text-center fw-bold'>{income.date}</td>\r\n                                                    <td className='text-center'>{income.title}</td>\r\n                                                    <td className='text-center'>{income.income}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className='pt-2 pb-5 justify-content-center table-button'>\r\n                                <Col className='d-flex justify-content-center'>\r\n                                    <ButtonToolbar aria-label=\"Toolbar with pagination\">\r\n                                        <Pagination>\r\n                                            <Pagination.Prev \r\n                                                onClick={() => handlePageChange(currentPage - 1)} \r\n                                                disabled={currentPage <= 1} \r\n                                                className='pagination-button'\r\n                                            />\r\n                                            {calculatePagination(\r\n                                                creatorLogArray,\r\n                                                handlePageChange\r\n                                            )}\r\n                                            <Pagination.Next \r\n                                                onClick={() => handlePageChange(currentPage + 1)} \r\n                                                disabled={currentPage >= Math.ceil(creatorLogArray.length / itemsPerPage)}\r\n                                                className='pagination-button'\r\n                                            />\r\n                                        </Pagination>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                        <Tab eventKey=\"nft\" title=\"NFT\">\r\n                            {!beingNFT &&  \r\n                                <Row className='pt-5 justify-content-center'>\r\n                                    <h1 className=\"fw-bold text-center\">{t('目前尚未鑄造NFT')}</h1>\r\n                                </Row>\r\n                            }\r\n                            <Row className=\"pb-1\">\r\n                                {comic.map((data, index) => (\r\n                                    <Col xs={4} md={3} className=\"pt-2\" key={index}>\r\n                                    <Link to={`/nftDetail/tokenId${data.tokenId}`}>\r\n                                        <Card className=\"effect-image-1\">\r\n                                        <Card.Img variant=\"top\" src={data.image} alt={`image-${index + 1}`} />\r\n                                        <div className=\"creatorNft-overlay\">\r\n                                            <span\r\n                                                style={{\r\n                                                    color: data.saleQty === 0 \r\n                                                    ? '#F44336' // 已售數量為 0 顯示紅色\r\n                                                    : data.saleQty === data.totQty \r\n                                                    ? '#BBFFFF' // 已售數量等於總數時顯示綠色\r\n                                                    : '#FFC107' // 其他情況顯示橙色\r\n                                                }}\r\n                                            >\r\n                                            {t('已售')}: {data.saleQty} {t('總數')}: {data.totQty}\r\n                                            </span>\r\n                                        </div>\r\n                                        <Card.Body className=\"simple-text\">\r\n                                            <Card.Text className=\"creatorNft-text\">{data.tokenTitle}</Card.Text>\r\n                                        </Card.Body>\r\n                                        </Card>\r\n                                    </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                            <hr />\r\n                            <Row className='pt-2 justify-content-center'>\r\n                                <h1 className=\"fw-bold text-center\">{nftTotalPrice}</h1>\r\n                            </Row>\r\n                            <Row className='justify-content-center'>\r\n                                <Col className='d-flex justify-content-center chapter-table pt-3'>\r\n                                    <Table size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className='text-center fw-bold'>tokenId</th>\r\n                                                <th className='text-center fw-bold'>{t('漫畫')} / NFT</th>\r\n                                                <th className='text-center fw-bold'>{t('總收益')}</th>\r\n                                                <th className='text-center fw-bold'>{t('詳情')}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {nftIncome.map((data, index) => (\r\n                                                <tr key={index}>\r\n                                                    <td className='text-center'>{data.tokenId}</td>\r\n                                                    <td className='text-center'>{data.title} / {data.tokenTitle}</td>\r\n                                                    <td className='text-center'>{data.price}</td>\r\n                                                    <td className='text-center'>\r\n                                                        <Link to={`/nftDetail/tokenId${data.tokenId}`}>\r\n                                                            <button className=\"btn\">{t('詳情')}</button>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='pt-2 pb-5 justify-content-center table-button'>\r\n                                <Col className='d-flex justify-content-center'>\r\n                                    <ButtonToolbar aria-label=\"Toolbar with pagination\">\r\n                                        <Pagination>\r\n                                            <Pagination.Prev \r\n                                                onClick={() => handlePageChange(currentPage - 1)} \r\n                                                disabled={currentPage <= 1} \r\n                                                className='pagination-button'\r\n                                            />\r\n                                            {calculatePagination(\r\n                                                saleNFT,\r\n                                                handlePageChange\r\n                                            )}\r\n                                            <Pagination.Next \r\n                                                onClick={() => handlePageChange(currentPage + 1)} \r\n                                                disabled={currentPage >= Math.ceil(saleNFT.length / itemsPerPage)}\r\n                                                className='pagination-button'\r\n                                            />\r\n                                        </Pagination>\r\n                                    </ButtonToolbar>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Container>\r\n            ) : (\r\n                <div className=\"loading-container\">\r\n                    <div>{t('頁面加載中')}</div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Analysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}