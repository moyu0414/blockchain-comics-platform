{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Container,Card,Col,Row,Button,Figure,Tabs,Tab,OverlayTrigger,Tooltip}from'react-bootstrap';import'./bootstrap.min.css';import{CardImage}from'react-bootstrap-icons';import{useTranslation}from'react-i18next';import i18n from'../i18n';import axios from'axios';import{sortByTimestamp}from'../index';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const website=process.env.REACT_APP_Website;const API_KEY=process.env.REACT_APP_API_KEY;function Bookcase(){const[current,setCurrent]=useState([]);const[isBuying,setIsBuying]=useState(true);const[NFTLogArray,setNFTLogArray]=useState([]);const[beingNFT,setBeingNFT]=useState(true);const{t}=useTranslation();const storedArrayJSON=localStorage.getItem('comicDatas');const storedArray=JSON.parse(storedArrayJSON);const readingProgress=localStorage.getItem(\"readingProgress\");const readingArray=readingProgress?JSON.parse(readingProgress):{};const currentAccount=localStorage.getItem(\"currentAccount\");const headers={'api-key':API_KEY};let bookcase=[];let fetchedData=[];const initData=async()=>{try{try{const response=await axios.get(`${website}/api/bookcase`,{headers:headers,params:{currentAccount:currentAccount}});bookcase=response.data;const comicMap=new Map(storedArray.map(comic=>[comic.comic_id,comic]));const readingMap=new Map(Object.entries(readingArray));for(const data of bookcase){const comic=comicMap.get(data.comicHash);if(comic){const imageResponse=await axios.get(`${website}/api/comicIMG/${comic.comic_id}`,{responseType:'blob',headers});const image=URL.createObjectURL(imageResponse.data);data.comicID=comic.comicID;data.image=image;const readingValue=readingMap.get(comic.comicID);if(readingValue){data.chapter=readingValue;};}}sortByPurchase(bookcase);bookcase.sort((a,b)=>(a.is_exist>0)-(b.is_exist>0));//console.log(bookcase);\nsetCurrent(bookcase);}catch(error){console.error('Error fetching records:',error);}if(bookcase.length==0){setIsBuying(false);}}catch(error){console.error('Error initializing data:',error);}};useEffect(()=>{initData();},[currentAccount]);const handleSelect=async eventKey=>{if(eventKey===\"NFT\"){const nftResponse=await axios.get(`${website}/api/bookcase/nftRecords`,{headers:headers,params:{currentAccount:currentAccount}});let nftRecords=nftResponse.data;const comicMap=new Map(storedArray.map(comic=>[comic.comic_id,comic]));for(const data of nftRecords){const comic=comicMap.get(data.comicHash);if(comic){const imageResponse=await axios.get(`${website}/api/comicIMG/${comic.comic_id}`,{responseType:'blob',headers});const image=URL.createObjectURL(imageResponse.data);data.image=image;data.names=parseAuthorizations(data.description).map(auth=>auth.name);}}nftRecords.sort((a,b)=>(a.is_exist>0)-(b.is_exist>0));setNFTLogArray(nftRecords);if(nftRecords.length===0){setBeingNFT(false);}}};const parseAuthorizations=text=>{text=text.trim();const lines=text.includes('\\n')?text.split('\\n'):[text];return lines.map(line=>{const[name]=line.split(':');return{name:t(name.trim())};});};function sortByPurchase(array){return array.sort((a,b)=>{const dateA=new Date(a.purchase_date);const dateB=new Date(b.purchase_date);return dateB.getTime()-dateA.getTime();// 降序排序\n});}const renderTooltip=(title,names)=>props=>/*#__PURE__*/_jsxs(Tooltip,{id:\"button-tooltip\",...props,children:[title,/*#__PURE__*/_jsx(\"hr\",{}),names.map((name,index)=>/*#__PURE__*/_jsx(\"div\",{children:name},index))]});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{className:\"creatorPage\",children:[/*#__PURE__*/_jsx(Row,{className:\"pt-4 align-items-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"h3\",{className:\"fw-bold\",children:t('我的書櫃')})})}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"profile\",onSelect:handleSelect,className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Tab,{eventKey:\"home\",title:t('最近閱讀'),children:[isBuying&&/*#__PURE__*/_jsx(Row,{xs:1,md:2,children:current.filter(data=>data.chapter)// 過濾出有 chapter 的數據\n.map((data,idx)=>/*#__PURE__*/_jsx(Col,{xs:4,md:3,children:/*#__PURE__*/_jsx(Link,{to:data.is_exist===0?`/comicRead/${data.comicID}/${data.chapter}`:`/comicDetail/${data.comicID}`,children:/*#__PURE__*/_jsx(Card,{children:data.is_exist===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:data.image}),/*#__PURE__*/_jsx(\"div\",{className:\"bookcase-overlay\",children:data.chapter}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Card.Title,{className:\"bookcase-read-text\",children:data.title})})]})})})},idx))}),!isBuying&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(\"div\",{children:t('目前無購買漫畫，請重新刷新')})})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"profile\",title:t('最近購買'),children:[isBuying&&/*#__PURE__*/_jsx(Row,{xs:1,md:2,children:current.map((data,idx)=>/*#__PURE__*/_jsx(Col,{xs:4,md:3,children:/*#__PURE__*/_jsx(Link,{to:`/comicDetail/${data.comicID}`,children:/*#__PURE__*/_jsxs(Card,{children:[data.is_exist===0?/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:data.image}):/*#__PURE__*/_jsxs(\"div\",{className:\"bookcase-position\",children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:\"/piraty.png\"}),/*#__PURE__*/_jsx(\"p\",{className:\"hidden\",children:data.is_exist===1?t('查核中\\n暫不開放'):t('盜版漫畫\\n已下架')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bookcase-purchase-overlay\"}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Card.Title,{className:\"bookcase-purchase-text\",children:data.title})})]})})},idx))}),!isBuying&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(\"div\",{children:t('目前無購買漫畫，請重新刷新')})})]}),/*#__PURE__*/_jsxs(Tab,{eventKey:\"NFT\",title:\"NFT\",children:[beingNFT&&/*#__PURE__*/_jsx(Row,{xs:1,md:2,children:NFTLogArray.map((data,idx)=>/*#__PURE__*/_jsx(Col,{xs:4,md:3,children:/*#__PURE__*/_jsx(Link,{to:`/nftOwner/tokenId${data.tokenId}`,children:/*#__PURE__*/_jsxs(Card,{children:[data.is_exist===0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"top\",overlay:renderTooltip(data.title,data.names),children:/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:data.image})}),/*#__PURE__*/_jsx(\"div\",{className:\"bookcase-overlay\",children:data.title})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"bookcase-position\",style:{marginBottom:\"30px\"},children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:\"/piraty.png\"}),/*#__PURE__*/_jsx(\"p\",{className:\"hidden\",children:data.is_exist===1?t('查核中\\n暫不開放'):t('盜版NFT\\n已下架')})]}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(Card.Title,{className:\"bookcase-read-text\",children:data.tokenTitle})})]})})},idx))}),!beingNFT&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:/*#__PURE__*/_jsx(\"div\",{children:t('目前無購買NFT，請重新刷新')})})]})]})]})});}export default Bookcase;","map":{"version":3,"names":["React","useState","useEffect","Link","Container","Card","Col","Row","Button","Figure","Tabs","Tab","OverlayTrigger","Tooltip","CardImage","useTranslation","i18n","axios","sortByTimestamp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","website","process","env","REACT_APP_Website","API_KEY","REACT_APP_API_KEY","Bookcase","current","setCurrent","isBuying","setIsBuying","NFTLogArray","setNFTLogArray","beingNFT","setBeingNFT","t","storedArrayJSON","localStorage","getItem","storedArray","JSON","parse","readingProgress","readingArray","currentAccount","headers","bookcase","fetchedData","initData","response","get","params","data","comicMap","Map","map","comic","comic_id","readingMap","Object","entries","comicHash","imageResponse","responseType","image","URL","createObjectURL","comicID","readingValue","chapter","sortByPurchase","sort","a","b","is_exist","error","console","length","handleSelect","eventKey","nftResponse","nftRecords","names","parseAuthorizations","description","auth","name","text","trim","lines","includes","split","line","array","dateA","Date","purchase_date","dateB","getTime","renderTooltip","title","props","id","children","index","className","defaultActiveKey","onSelect","xs","md","filter","idx","to","Img","variant","src","Body","Title","tokenId","placement","overlay","style","marginBottom","tokenTitle"],"sources":["C:/Users/user1/Desktop/blockchain-comics-platform/frontend/src/routes/bookcase.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Card, Col, Row, Button, Figure,Tabs, Tab, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport './bootstrap.min.css';\r\nimport { CardImage } from 'react-bootstrap-icons';\r\nimport { useTranslation } from 'react-i18next';\r\nimport i18n from '../i18n';\r\nimport axios from 'axios';\r\nimport { sortByTimestamp } from '../index';\r\nconst website = process.env.REACT_APP_Website;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nfunction Bookcase() {\r\n    const [current, setCurrent] = useState([]);\r\n    const [isBuying, setIsBuying] = useState(true);\r\n    const [NFTLogArray, setNFTLogArray] = useState([]);\r\n    const [beingNFT, setBeingNFT] = useState(true);\r\n    const { t } = useTranslation();\r\n    const storedArrayJSON = localStorage.getItem('comicDatas');\r\n    const storedArray = JSON.parse(storedArrayJSON);\r\n    const readingProgress = localStorage.getItem(\"readingProgress\");\r\n    const readingArray = readingProgress ? JSON.parse(readingProgress) : {}; \r\n    const currentAccount = localStorage.getItem(\"currentAccount\");\r\n    const headers = {'api-key': API_KEY};\r\n    let bookcase = [];\r\n    let fetchedData = [];\r\n    \r\n    const initData = async () => {\r\n        try {\r\n            try {\r\n                const response = await axios.get(`${website}/api/bookcase`, {\r\n                    headers: headers,\r\n                    params: {\r\n                        currentAccount: currentAccount\r\n                    }\r\n                });\r\n                bookcase = response.data;\r\n                const comicMap = new Map(storedArray.map(comic => [comic.comic_id, comic]));\r\n                const readingMap = new Map(Object.entries(readingArray));\r\n                for (const data of bookcase) {\r\n                    const comic = comicMap.get(data.comicHash);\r\n                    if (comic) {\r\n                        const imageResponse = await axios.get(`${website}/api/comicIMG/${comic.comic_id}`, { responseType: 'blob', headers });\r\n                        const image = URL.createObjectURL(imageResponse.data);\r\n                        data.comicID = comic.comicID;\r\n                        data.image = image;\r\n                        const readingValue = readingMap.get(comic.comicID);\r\n                        if (readingValue) {\r\n                            data.chapter = readingValue;\r\n                        };\r\n                    }\r\n                }\r\n                sortByPurchase(bookcase);\r\n                bookcase.sort((a, b) => (a.is_exist > 0) - (b.is_exist > 0));\r\n                //console.log(bookcase);\r\n                setCurrent(bookcase);\r\n            } catch (error) {\r\n                console.error('Error fetching records:', error);\r\n            }\r\n            if (bookcase.length == 0) {\r\n                setIsBuying(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error initializing data:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        initData();\r\n    }, [currentAccount]);\r\n\r\n    const handleSelect = async (eventKey) => {\r\n        if (eventKey === \"NFT\") {\r\n            const nftResponse = await axios.get(`${website}/api/bookcase/nftRecords`, {\r\n                headers: headers,\r\n                params: {\r\n                    currentAccount: currentAccount\r\n                }\r\n            });\r\n            let nftRecords = nftResponse.data;\r\n            const comicMap = new Map(storedArray.map(comic => [comic.comic_id, comic]));\r\n            for (const data of nftRecords) {\r\n                const comic = comicMap.get(data.comicHash);\r\n                if (comic) {\r\n                    const imageResponse = await axios.get(`${website}/api/comicIMG/${comic.comic_id}`, { responseType: 'blob', headers });\r\n                    const image = URL.createObjectURL(imageResponse.data);\r\n                    data.image = image;\r\n                    data.names = parseAuthorizations(data.description).map(auth => auth.name);\r\n                }\r\n            }\r\n            nftRecords.sort((a, b) => (a.is_exist > 0) - (b.is_exist > 0));\r\n            setNFTLogArray(nftRecords);\r\n            if (nftRecords.length === 0) {\r\n              setBeingNFT(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const parseAuthorizations = (text) => {\r\n        text = text.trim();\r\n        const lines = text.includes('\\n') ? text.split('\\n') : [text];\r\n        return lines.map(line => {\r\n            const [name] = line.split(':');\r\n            return {\r\n                name: t(name.trim()),\r\n            };\r\n        });\r\n    };\r\n\r\n    function sortByPurchase(array) {\r\n        return array.sort((a, b) => {\r\n            const dateA = new Date(a.purchase_date);\r\n            const dateB = new Date(b.purchase_date);\r\n            return dateB.getTime() - dateA.getTime();  // 降序排序\r\n        });\r\n    }\r\n\r\n    const renderTooltip = (title, names) => (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            {title}\r\n            <hr />\r\n            {names.map((name, index) => (\r\n                <div key={index}>{name}</div>\r\n            ))}\r\n        </Tooltip>\r\n    );\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Container className='creatorPage'>\r\n                <Row className=\"pt-4 align-items-center\">\r\n                    <Col>\r\n                        <h3 className=\"fw-bold\">{t('我的書櫃')}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Tabs defaultActiveKey=\"profile\" onSelect={handleSelect} className=\"mb-3\">\r\n                    <Tab eventKey=\"home\" title={t('最近閱讀')}>\r\n                        {isBuying &&\r\n                            <Row xs={1} md={2}>\r\n                                {current\r\n                                    .filter(data => data.chapter) // 過濾出有 chapter 的數據\r\n                                    .map((data, idx) => (\r\n                                        <Col key={idx} xs={4} md={3}>\r\n                                            <Link to={data.is_exist === 0 ? (`/comicRead/${data.comicID}/${data.chapter}`) : (`/comicDetail/${data.comicID}`)}>\r\n                                                <Card>\r\n                                                    {data.is_exist === 0 && (\r\n                                                        <>\r\n                                                            <Card.Img variant=\"top\" src={data.image} />\r\n                                                            <div className=\"bookcase-overlay\">{data.chapter}</div>\r\n                                                            <Card.Body>\r\n                                                                <Card.Title className='bookcase-read-text'>{data.title}</Card.Title>\r\n                                                            </Card.Body>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Card>\r\n                                            </Link>\r\n                                        </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        {!isBuying &&\r\n                            <div className=\"loading-container\">\r\n                                <div>{t('目前無購買漫畫，請重新刷新')}</div>\r\n                            </div>\r\n                        }\r\n                    </Tab>\r\n                    <Tab eventKey=\"profile\" title={t('最近購買')}>\r\n                        {isBuying &&\r\n                            <Row xs={1} md={2}>\r\n                                {current.map((data, idx) => (\r\n                                    <Col key={idx} xs={4} md={3}>\r\n                                        <Link to={`/comicDetail/${data.comicID}`}>\r\n                                            <Card>\r\n                                                {data.is_exist === 0 ? (\r\n                                                    <Card.Img variant=\"top\" src={data.image} />\r\n                                                ) : (\r\n                                                    <div className=\"bookcase-position\">\r\n                                                        <Card.Img variant=\"top\" src='/piraty.png' />\r\n                                                        <p className=\"hidden\">\r\n                                                            {data.is_exist === 1 ? t('查核中\\n暫不開放') : t('盜版漫畫\\n已下架')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                )}\r\n                                                <div className=\"bookcase-purchase-overlay\"></div>\r\n                                                <Card.Body>\r\n                                                    <Card.Title className='bookcase-purchase-text'>{data.title}</Card.Title>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        {!isBuying &&\r\n                            <div className=\"loading-container\">\r\n                                <div>{t('目前無購買漫畫，請重新刷新')}</div>\r\n                            </div>\r\n                        }\r\n                    </Tab>\r\n                    <Tab eventKey=\"NFT\" title='NFT'>\r\n                        {beingNFT &&\r\n                            <Row xs={1} md={2}>\r\n                                {NFTLogArray.map((data, idx) => (\r\n                                    <Col key={idx} xs={4} md={3}>\r\n                                        <Link to={`/nftOwner/tokenId${data.tokenId}`}>\r\n                                            <Card>\r\n                                                {data.is_exist === 0 ? (\r\n                                                    <>\r\n                                                        <OverlayTrigger placement=\"top\" overlay={renderTooltip(data.title, data.names)}>\r\n                                                            <Card.Img variant=\"top\" src={data.image} />\r\n                                                        </OverlayTrigger>\r\n                                                        <div className=\"bookcase-overlay\">{data.title}</div>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <div className=\"bookcase-position\"  style={{marginBottom: \"30px\"}}>\r\n                                                        <Card.Img variant=\"top\" src='/piraty.png' />\r\n                                                        <p className=\"hidden\">\r\n                                                            {data.is_exist === 1 ? t('查核中\\n暫不開放') : t('盜版NFT\\n已下架')}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                )}\r\n                                                <Card.Body>\r\n                                                    <Card.Title className='bookcase-read-text'>{data.tokenTitle}</Card.Title>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        {!beingNFT &&\r\n                            <div className=\"loading-container\">\r\n                                <div>{t('目前無購買NFT，請重新刷新')}</div>\r\n                            </div>\r\n                        }\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Bookcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}