{"ast":null,"code":"import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  var _node$props$children, _node$props;\n  if (!node) return false;\n  const base = (_node$props$children = (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.children) !== null && _node$props$children !== void 0 ? _node$props$children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  var _node$props$children2, _node$props2, _node$props3;\n  if (!node) return [];\n  const children = (_node$props$children2 = (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.children) !== null && _node$props$children2 !== void 0 ? _node$props$children2 : node.children;\n  return (_node$props3 = node.props) !== null && _node$props3 !== void 0 && _node$props3.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions) => {\n  var _i18nOptions$transKee;\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions !== null && i18nOptions !== void 0 && i18nOptions.transSupportBasicHtmlNodes ? (_i18nOptions$transKee = i18nOptions.transKeepBasicHtmlNodesFor) !== null && _i18nOptions$transKee !== void 0 ? _i18nOptions$transKee : [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += \"\".concat(child);\n    } else if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += \"<\".concat(type, \"/>\");\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n      } else if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += \"<\".concat(type, \">\").concat(childChildren, \"</\").concat(type, \">\");\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += \"<\".concat(childIndex, \">\").concat(content, \"</\").concat(childIndex, \">\");\n      }\n    } else if (child === null) {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a null child.\");\n    } else if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? \"\".concat(keys[0], \", \").concat(format) : keys[0];\n        stringNode += \"{{\".concat(value, \"}}\");\n      } else {\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => \"<\".concat(keep)).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(\"<0>\".concat(targetString, \"</0>\"));\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    var _child$props;\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || (_child$props = child.props) !== null && _child$props !== void 0 && _child$props.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      var _node$children;\n      const translationContent = ((_node$children = node.children) === null || _node$children === void 0 || (_node$children = _node$children[0]) === null || _node$children === void 0 ? void 0 : _node$children.content) && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(\"<\".concat(node.name, \">\").concat(inner, \"</\").concat(node.name, \">\"));\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: \"\".concat(node.name, \"-\").concat(i)\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nexport function Trans(_ref) {\n  var _i18n$options, _i18n$options2, _i18n$options3;\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...((_i18n$options = i18n.options) === null || _i18n$options === void 0 ? void 0 : _i18n$options.react)\n  };\n  let namespaces = ns || t.ns || ((_i18n$options2 = i18n.options) === null || _i18n$options2 === void 0 ? void 0 : _i18n$options2.defaultNS);\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if ((_i18n$options3 = i18n.options) !== null && _i18n$options3 !== void 0 && (_i18n$options3 = _i18n$options3.interpolation) !== null && _i18n$options3 !== void 0 && _i18n$options3.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  if (components) {\n    Object.keys(components).forEach(c => {\n      const comp = components[c];\n      if (typeof comp.type === 'function' || !comp.props || !comp.props.children || translation.indexOf(\"\".concat(c, \"/>\")) < 0 && translation.indexOf(\"\".concat(c, \" />\")) < 0) return;\n      function Componentized() {\n        return createElement(Fragment, null, comp);\n      }\n      components[c] = createElement(Componentized);\n    });\n  }\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== null && parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"names":["Fragment","isValidElement","cloneElement","createElement","Children","HTML","isObject","isString","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","_node$props$children","_node$props","base","props","children","length","getChildren","_node$props$children2","_node$props2","_node$props3","i18nIsDynamicList","getAsArray","hasValidReactChildren","Array","isArray","every","data","mergeProps","source","target","newTarget","Object","assign","nodesToString","i18nOptions","_i18nOptions$transKee","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","child","childIndex","concat","type","childPropsCount","keys","shouldKeepChild","indexOf","childChildren","content","format","clone","value","renderNodes","targetString","i18n","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","map","keep","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","_child$props","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","c","ref","reactNode","astNode","reactNodes","astNodes","reduce","_node$children","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","call","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","Trans","_ref","_i18n$options","_i18n$options2","_i18n$options3","count","parent","i18nKey","context","tOptions","values","defaults","components","ns","i18nFromProps","t","tFromProps","additionalProps","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","nodeAsString","defaultValue","transEmptyNodeValue","hashTransKey","interpolation","defaultVariables","interpolationOverride","prefix","suffix","translation","comp","Componentized","useAsParent","defaultTransParent"],"sources":["C:/Users/user1/Desktop/blockchain-comics-platform/frontend/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"sourcesContent":["import { Fragment, isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { isObject, isString, warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nconst hasChildren = (node, checkLength) => {\n  if (!node) return false;\n  const base = node.props?.children ?? node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n};\nconst getChildren = node => {\n  if (!node) return [];\n  const children = node.props?.children ?? node.children;\n  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;\n};\nconst hasValidReactChildren = children => Array.isArray(children) && children.every(isValidElement);\nconst getAsArray = data => Array.isArray(data) ? data : [data];\nconst mergeProps = (source, target) => {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n};\nexport const nodesToString = (children, i18nOptions) => {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (isString(child)) {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const {\n        props,\n        type\n      } = child;\n      const childPropsCount = Object.keys(props).length;\n      const shouldKeepChild = keepArray.indexOf(type) > -1;\n      const childChildren = props.children;\n      if (!childChildren && shouldKeepChild && !childPropsCount) {\n        stringNode += `<${type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {\n        stringNode += `<${type}>${childChildren}</${type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (isObject(child)) {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n};\nconst renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  const getData = childs => {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (isString(child)) return;\n      if (hasChildren(child)) getData(getChildren(child));else if (isObject(child) && !isValidElement(child)) Object.assign(data, child);\n    });\n  };\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  const renderInner = (child, node, rootReactNode) => {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;\n  };\n  const pushTranslatedJSX = (child, inner, mem, i, isVoid) => {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return createElement(c.type, {\n          ...props,\n          key: i,\n          ref: c.ref\n        }, isVoid ? null : inner);\n      }));\n    }\n  };\n  const mapAST = (reactNode, astNode, rootReactNode) => {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;\n        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);\n        if (isString(child)) {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (isObject(child) && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  };\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n};\nexport function Trans({\n  children,\n  count,\n  parent,\n  i18nKey,\n  context,\n  tOptions = {},\n  values,\n  defaults,\n  components,\n  ns,\n  i18n: i18nFromProps,\n  t: tFromProps,\n  shouldUnescape,\n  ...additionalProps\n}) {\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options?.react\n  };\n  let namespaces = ns || t.ns || i18n.options?.defaultNS;\n  namespaces = isString(namespaces) ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options?.interpolation?.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values || count !== undefined || !children ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    context: context || tOptions.context,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  if (components) {\n    Object.keys(components).forEach(c => {\n      const comp = components[c];\n      if (typeof comp.type === 'function' || !comp.props || !comp.props.children || translation.indexOf(`${c}/>`) < 0 && translation.indexOf(`${c} />`) < 0) return;\n      function Componentized() {\n        return createElement(Fragment, null, comp);\n      }\n      components[c] = createElement(Componentized);\n    });\n  }\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}